///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import "DBAUTHTokenFromOAuth1Result.h"
#import "DBStoneSerializers.h"
#import "DBStoneValidators.h"

#pragma mark - API Object

@implementation DBAUTHTokenFromOAuth1Result

#pragma mark - Constructors

- (instancetype)initWithOauth2Token:(NSString *)oauth2Token {
  [DBStoneValidators stringValidator:@(1) maxLength:nil pattern:nil](oauth2Token);

  self = [super init];
  if (self) {
    _oauth2Token = oauth2Token;
  }
  return self;
}

#pragma mark - Serialization methods

+ (NSDictionary *)serialize:(id)instance {
  return [DBAUTHTokenFromOAuth1ResultSerializer serialize:instance];
}

+ (id)deserialize:(NSDictionary *)dict {
  return [DBAUTHTokenFromOAuth1ResultSerializer deserialize:dict];
}

#pragma mark - Description method

- (NSString *)description {
  return [[DBAUTHTokenFromOAuth1ResultSerializer serialize:self] description];
}

@end

#pragma mark - Serializer Object

@implementation DBAUTHTokenFromOAuth1ResultSerializer

+ (NSDictionary *)serialize:(DBAUTHTokenFromOAuth1Result *)valueObj {
  NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

  jsonDict[@"oauth2_token"] = valueObj.oauth2Token;

  return jsonDict;
}

+ (DBAUTHTokenFromOAuth1Result *)deserialize:(NSDictionary *)valueDict {
  NSString *oauth2Token = valueDict[@"oauth2_token"];

  return [[DBAUTHTokenFromOAuth1Result alloc] initWithOauth2Token:oauth2Token];
}

@end
