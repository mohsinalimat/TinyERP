///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import "DBStoneSerializers.h"
#import "DBStoneValidators.h"
#import "DBTEAMActiveWebSession.h"
#import "DBTEAMDesktopClientSession.h"
#import "DBTEAMListMemberDevicesResult.h"
#import "DBTEAMMobileClientSession.h"

#pragma mark - API Object

@implementation DBTEAMListMemberDevicesResult

#pragma mark - Constructors

- (instancetype)initWithActiveWebSessions:(NSArray<DBTEAMActiveWebSession *> *)activeWebSessions
                    desktopClientSessions:(NSArray<DBTEAMDesktopClientSession *> *)desktopClientSessions
                     mobileClientSessions:(NSArray<DBTEAMMobileClientSession *> *)mobileClientSessions {
  [DBStoneValidators
   nullableValidator:[DBStoneValidators arrayValidator:nil maxItems:nil itemValidator:nil]](activeWebSessions);
  [DBStoneValidators
   nullableValidator:[DBStoneValidators arrayValidator:nil maxItems:nil itemValidator:nil]](desktopClientSessions);
  [DBStoneValidators
   nullableValidator:[DBStoneValidators arrayValidator:nil maxItems:nil itemValidator:nil]](mobileClientSessions);

  self = [super init];
  if (self) {
    _activeWebSessions = activeWebSessions;
    _desktopClientSessions = desktopClientSessions;
    _mobileClientSessions = mobileClientSessions;
  }
  return self;
}

- (instancetype)init {
  return [self initWithActiveWebSessions:nil desktopClientSessions:nil mobileClientSessions:nil];
}

#pragma mark - Serialization methods

+ (NSDictionary *)serialize:(id)instance {
  return [DBTEAMListMemberDevicesResultSerializer serialize:instance];
}

+ (id)deserialize:(NSDictionary *)dict {
  return [DBTEAMListMemberDevicesResultSerializer deserialize:dict];
}

#pragma mark - Description method

- (NSString *)description {
  return [[DBTEAMListMemberDevicesResultSerializer serialize:self] description];
}

@end

#pragma mark - Serializer Object

@implementation DBTEAMListMemberDevicesResultSerializer

+ (NSDictionary *)serialize:(DBTEAMListMemberDevicesResult *)valueObj {
  NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

  if (valueObj.activeWebSessions) {
    jsonDict[@"active_web_sessions"] = [DBArraySerializer serialize:valueObj.activeWebSessions
                                                          withBlock:^id(id elem) {
                                                            return [DBTEAMActiveWebSessionSerializer serialize:elem];
                                                          }];
  }
  if (valueObj.desktopClientSessions) {
    jsonDict[@"desktop_client_sessions"] =
        [DBArraySerializer serialize:valueObj.desktopClientSessions
                           withBlock:^id(id elem) {
                             return [DBTEAMDesktopClientSessionSerializer serialize:elem];
                           }];
  }
  if (valueObj.mobileClientSessions) {
    jsonDict[@"mobile_client_sessions"] =
        [DBArraySerializer serialize:valueObj.mobileClientSessions
                           withBlock:^id(id elem) {
                             return [DBTEAMMobileClientSessionSerializer serialize:elem];
                           }];
  }

  return jsonDict;
}

+ (DBTEAMListMemberDevicesResult *)deserialize:(NSDictionary *)valueDict {
  NSArray<DBTEAMActiveWebSession *> *activeWebSessions =
      valueDict[@"active_web_sessions"]
          ? [DBArraySerializer deserialize:valueDict[@"active_web_sessions"]
                                 withBlock:^id(id elem) {
                                   return [DBTEAMActiveWebSessionSerializer deserialize:elem];
                                 }]
          : nil;
  NSArray<DBTEAMDesktopClientSession *> *desktopClientSessions =
      valueDict[@"desktop_client_sessions"]
          ? [DBArraySerializer deserialize:valueDict[@"desktop_client_sessions"]
                                 withBlock:^id(id elem) {
                                   return [DBTEAMDesktopClientSessionSerializer deserialize:elem];
                                 }]
          : nil;
  NSArray<DBTEAMMobileClientSession *> *mobileClientSessions =
      valueDict[@"mobile_client_sessions"]
          ? [DBArraySerializer deserialize:valueDict[@"mobile_client_sessions"]
                                 withBlock:^id(id elem) {
                                   return [DBTEAMMobileClientSessionSerializer deserialize:elem];
                                 }]
          : nil;

  return [[DBTEAMListMemberDevicesResult alloc] initWithActiveWebSessions:activeWebSessions
                                                    desktopClientSessions:desktopClientSessions
                                                     mobileClientSessions:mobileClientSessions];
}

@end
