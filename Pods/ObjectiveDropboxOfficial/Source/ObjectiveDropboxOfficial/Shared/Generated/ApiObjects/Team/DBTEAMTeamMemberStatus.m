///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import "DBStoneSerializers.h"
#import "DBStoneValidators.h"
#import "DBTEAMRemovedStatus.h"
#import "DBTEAMTeamMemberStatus.h"

#pragma mark - API Object

@implementation DBTEAMTeamMemberStatus

@synthesize removed = _removed;

#pragma mark - Constructors

- (instancetype)initWithActive {
  self = [super init];
  if (self) {
    _tag = DBTEAMTeamMemberStatusActive;
  }
  return self;
}

- (instancetype)initWithInvited {
  self = [super init];
  if (self) {
    _tag = DBTEAMTeamMemberStatusInvited;
  }
  return self;
}

- (instancetype)initWithSuspended {
  self = [super init];
  if (self) {
    _tag = DBTEAMTeamMemberStatusSuspended;
  }
  return self;
}

- (instancetype)initWithRemoved:(DBTEAMRemovedStatus *)removed {
  self = [super init];
  if (self) {
    _tag = DBTEAMTeamMemberStatusRemoved;
    _removed = removed;
  }
  return self;
}

#pragma mark - Instance field accessors

- (DBTEAMRemovedStatus *)removed {
  if (![self isRemoved]) {
    [NSException raise:@"IllegalStateException"
                format:@"Invalid tag: required DBTEAMTeamMemberStatusRemoved, but was %@.", [self tagName]];
  }
  return _removed;
}

#pragma mark - Tag state methods

- (BOOL)isActive {
  return _tag == DBTEAMTeamMemberStatusActive;
}

- (BOOL)isInvited {
  return _tag == DBTEAMTeamMemberStatusInvited;
}

- (BOOL)isSuspended {
  return _tag == DBTEAMTeamMemberStatusSuspended;
}

- (BOOL)isRemoved {
  return _tag == DBTEAMTeamMemberStatusRemoved;
}

- (NSString *)tagName {
  switch (_tag) {
  case DBTEAMTeamMemberStatusActive:
    return @"DBTEAMTeamMemberStatusActive";
  case DBTEAMTeamMemberStatusInvited:
    return @"DBTEAMTeamMemberStatusInvited";
  case DBTEAMTeamMemberStatusSuspended:
    return @"DBTEAMTeamMemberStatusSuspended";
  case DBTEAMTeamMemberStatusRemoved:
    return @"DBTEAMTeamMemberStatusRemoved";
  }

  @throw([NSException exceptionWithName:@"InvalidTag" reason:@"Tag has an unknown value." userInfo:nil]);
}

#pragma mark - Serialization methods

+ (NSDictionary *)serialize:(id)instance {
  return [DBTEAMTeamMemberStatusSerializer serialize:instance];
}

+ (id)deserialize:(NSDictionary *)dict {
  return [DBTEAMTeamMemberStatusSerializer deserialize:dict];
}

#pragma mark - Description method

- (NSString *)description {
  return [[DBTEAMTeamMemberStatusSerializer serialize:self] description];
}

@end

#pragma mark - Serializer Object

@implementation DBTEAMTeamMemberStatusSerializer

+ (NSDictionary *)serialize:(DBTEAMTeamMemberStatus *)valueObj {
  NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

  if ([valueObj isActive]) {
    jsonDict[@".tag"] = @"active";
  } else if ([valueObj isInvited]) {
    jsonDict[@".tag"] = @"invited";
  } else if ([valueObj isSuspended]) {
    jsonDict[@".tag"] = @"suspended";
  } else if ([valueObj isRemoved]) {
    jsonDict[@"removed"] = [[DBTEAMRemovedStatusSerializer serialize:valueObj.removed] mutableCopy];
    jsonDict[@".tag"] = @"removed";
  } else {
    @throw([NSException exceptionWithName:@"InvalidTag"
                                   reason:@"Object not properly initialized. Tag has an unknown value."
                                 userInfo:nil]);
  }

  return jsonDict;
}

+ (DBTEAMTeamMemberStatus *)deserialize:(NSDictionary *)valueDict {
  NSString *tag = valueDict[@".tag"];

  if ([tag isEqualToString:@"active"]) {
    return [[DBTEAMTeamMemberStatus alloc] initWithActive];
  } else if ([tag isEqualToString:@"invited"]) {
    return [[DBTEAMTeamMemberStatus alloc] initWithInvited];
  } else if ([tag isEqualToString:@"suspended"]) {
    return [[DBTEAMTeamMemberStatus alloc] initWithSuspended];
  } else if ([tag isEqualToString:@"removed"]) {
    DBTEAMRemovedStatus *removed = [DBTEAMRemovedStatusSerializer deserialize:valueDict];
    return [[DBTEAMTeamMemberStatus alloc] initWithRemoved:removed];
  }

  @throw([NSException
      exceptionWithName:@"InvalidTag"
                 reason:[NSString stringWithFormat:@"Tag has an invalid value: \"%@\".", valueDict[@".tag"]]
               userInfo:nil]);
}

@end
