///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import "DBStoneSerializers.h"
#import "DBStoneValidators.h"
#import "DBTEAMListTeamDevicesResult.h"
#import "DBTEAMMemberDevices.h"

#pragma mark - API Object

@implementation DBTEAMListTeamDevicesResult

#pragma mark - Constructors

- (instancetype)initWithDevices:(NSArray<DBTEAMMemberDevices *> *)devices
                        hasMore:(NSNumber *)hasMore
                         cursor:(NSString *)cursor {
  [DBStoneValidators arrayValidator:nil maxItems:nil itemValidator:nil](devices);

  self = [super init];
  if (self) {
    _devices = devices;
    _hasMore = hasMore;
    _cursor = cursor;
  }
  return self;
}

- (instancetype)initWithDevices:(NSArray<DBTEAMMemberDevices *> *)devices hasMore:(NSNumber *)hasMore {
  return [self initWithDevices:devices hasMore:hasMore cursor:nil];
}

#pragma mark - Serialization methods

+ (NSDictionary *)serialize:(id)instance {
  return [DBTEAMListTeamDevicesResultSerializer serialize:instance];
}

+ (id)deserialize:(NSDictionary *)dict {
  return [DBTEAMListTeamDevicesResultSerializer deserialize:dict];
}

#pragma mark - Description method

- (NSString *)description {
  return [[DBTEAMListTeamDevicesResultSerializer serialize:self] description];
}

@end

#pragma mark - Serializer Object

@implementation DBTEAMListTeamDevicesResultSerializer

+ (NSDictionary *)serialize:(DBTEAMListTeamDevicesResult *)valueObj {
  NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

  jsonDict[@"devices"] = [DBArraySerializer serialize:valueObj.devices
                                            withBlock:^id(id elem) {
                                              return [DBTEAMMemberDevicesSerializer serialize:elem];
                                            }];
  jsonDict[@"has_more"] = valueObj.hasMore;
  if (valueObj.cursor) {
    jsonDict[@"cursor"] = valueObj.cursor;
  }

  return jsonDict;
}

+ (DBTEAMListTeamDevicesResult *)deserialize:(NSDictionary *)valueDict {
  NSArray<DBTEAMMemberDevices *> *devices =
      [DBArraySerializer deserialize:valueDict[@"devices"]
                           withBlock:^id(id elem) {
                             return [DBTEAMMemberDevicesSerializer deserialize:elem];
                           }];
  NSNumber *hasMore = valueDict[@"has_more"];
  NSString *cursor = valueDict[@"cursor"] ?: nil;

  return [[DBTEAMListTeamDevicesResult alloc] initWithDevices:devices hasMore:hasMore cursor:cursor];
}

@end
