///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import "DBStoneSerializers.h"
#import "DBStoneValidators.h"
#import "DBTEAMTeamFolderAccessError.h"
#import "DBTEAMTeamFolderListError.h"

#pragma mark - API Object

@implementation DBTEAMTeamFolderListError

#pragma mark - Constructors

- (instancetype)initWithAccessError:(DBTEAMTeamFolderAccessError *)accessError {

  self = [super init];
  if (self) {
    _accessError = accessError;
  }
  return self;
}

#pragma mark - Serialization methods

+ (NSDictionary *)serialize:(id)instance {
  return [DBTEAMTeamFolderListErrorSerializer serialize:instance];
}

+ (id)deserialize:(NSDictionary *)dict {
  return [DBTEAMTeamFolderListErrorSerializer deserialize:dict];
}

#pragma mark - Description method

- (NSString *)description {
  return [[DBTEAMTeamFolderListErrorSerializer serialize:self] description];
}

@end

#pragma mark - Serializer Object

@implementation DBTEAMTeamFolderListErrorSerializer

+ (NSDictionary *)serialize:(DBTEAMTeamFolderListError *)valueObj {
  NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

  jsonDict[@"access_error"] = [DBTEAMTeamFolderAccessErrorSerializer serialize:valueObj.accessError];

  return jsonDict;
}

+ (DBTEAMTeamFolderListError *)deserialize:(NSDictionary *)valueDict {
  DBTEAMTeamFolderAccessError *accessError =
      [DBTEAMTeamFolderAccessErrorSerializer deserialize:valueDict[@"access_error"]];

  return [[DBTEAMTeamFolderListError alloc] initWithAccessError:accessError];
}

@end
