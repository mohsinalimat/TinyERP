///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import "DBPROPERTIESPropertyFieldTemplate.h"
#import "DBStoneSerializers.h"
#import "DBStoneValidators.h"
#import "DBTEAMUpdatePropertyTemplateArg.h"

#pragma mark - API Object

@implementation DBTEAMUpdatePropertyTemplateArg

#pragma mark - Constructors

- (instancetype)initWithTemplateId:(NSString *)templateId
                              name:(NSString *)name
                      description_:(NSString *)description_
                         addFields:(NSArray<DBPROPERTIESPropertyFieldTemplate *> *)addFields {
  [DBStoneValidators stringValidator:@(1) maxLength:nil pattern:@"(/|ptid:).*"](templateId);
  [DBStoneValidators
   nullableValidator:[DBStoneValidators arrayValidator:nil maxItems:nil itemValidator:nil]](addFields);

  self = [super init];
  if (self) {
    _templateId = templateId;
    _name = name;
    _description_ = description_;
    _addFields = addFields;
  }
  return self;
}

- (instancetype)initWithTemplateId:(NSString *)templateId {
  return [self initWithTemplateId:templateId name:nil description_:nil addFields:nil];
}

#pragma mark - Serialization methods

+ (NSDictionary *)serialize:(id)instance {
  return [DBTEAMUpdatePropertyTemplateArgSerializer serialize:instance];
}

+ (id)deserialize:(NSDictionary *)dict {
  return [DBTEAMUpdatePropertyTemplateArgSerializer deserialize:dict];
}

#pragma mark - Description method

- (NSString *)description {
  return [[DBTEAMUpdatePropertyTemplateArgSerializer serialize:self] description];
}

@end

#pragma mark - Serializer Object

@implementation DBTEAMUpdatePropertyTemplateArgSerializer

+ (NSDictionary *)serialize:(DBTEAMUpdatePropertyTemplateArg *)valueObj {
  NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

  jsonDict[@"template_id"] = valueObj.templateId;
  if (valueObj.name) {
    jsonDict[@"name"] = valueObj.name;
  }
  if (valueObj.description_) {
    jsonDict[@"description"] = valueObj.description_;
  }
  if (valueObj.addFields) {
    jsonDict[@"add_fields"] = [DBArraySerializer serialize:valueObj.addFields
                                                 withBlock:^id(id elem) {
                                                   return [DBPROPERTIESPropertyFieldTemplateSerializer serialize:elem];
                                                 }];
  }

  return jsonDict;
}

+ (DBTEAMUpdatePropertyTemplateArg *)deserialize:(NSDictionary *)valueDict {
  NSString *templateId = valueDict[@"template_id"];
  NSString *name = valueDict[@"name"] ?: nil;
  NSString *description_ = valueDict[@"description"] ?: nil;
  NSArray<DBPROPERTIESPropertyFieldTemplate *> *addFields =
      valueDict[@"add_fields"]
          ? [DBArraySerializer deserialize:valueDict[@"add_fields"]
                                 withBlock:^id(id elem) {
                                   return [DBPROPERTIESPropertyFieldTemplateSerializer deserialize:elem];
                                 }]
          : nil;

  return [[DBTEAMUpdatePropertyTemplateArg alloc] initWithTemplateId:templateId
                                                                name:name
                                                        description_:description_
                                                           addFields:addFields];
}

@end
