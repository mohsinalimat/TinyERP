///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import "DBStoneSerializers.h"
#import "DBStoneValidators.h"
#import "DBTEAMDevicesActive.h"

#pragma mark - API Object

@implementation DBTEAMDevicesActive

#pragma mark - Constructors

- (instancetype)initWithWindows:(NSArray<NSNumber *> *)windows
                          macos:(NSArray<NSNumber *> *)macos
                          linux:(NSArray<NSNumber *> *)linux
                            ios:(NSArray<NSNumber *> *)ios
                        android:(NSArray<NSNumber *> *)android
                          other:(NSArray<NSNumber *> *)other
                          total:(NSArray<NSNumber *> *)total {
  [DBStoneValidators arrayValidator:nil maxItems:nil itemValidator:nil](windows);
  [DBStoneValidators arrayValidator:nil maxItems:nil itemValidator:nil](macos);
  [DBStoneValidators arrayValidator:nil maxItems:nil itemValidator:nil](linux);
  [DBStoneValidators arrayValidator:nil maxItems:nil itemValidator:nil](ios);
  [DBStoneValidators arrayValidator:nil maxItems:nil itemValidator:nil](android);
  [DBStoneValidators arrayValidator:nil maxItems:nil itemValidator:nil](other);
  [DBStoneValidators arrayValidator:nil maxItems:nil itemValidator:nil](total);

  self = [super init];
  if (self) {
    _windows = windows;
    _macos = macos;
    _linux = linux;
    _ios = ios;
    _android = android;
    _other = other;
    _total = total;
  }
  return self;
}

#pragma mark - Serialization methods

+ (NSDictionary *)serialize:(id)instance {
  return [DBTEAMDevicesActiveSerializer serialize:instance];
}

+ (id)deserialize:(NSDictionary *)dict {
  return [DBTEAMDevicesActiveSerializer deserialize:dict];
}

#pragma mark - Description method

- (NSString *)description {
  return [[DBTEAMDevicesActiveSerializer serialize:self] description];
}

@end

#pragma mark - Serializer Object

@implementation DBTEAMDevicesActiveSerializer

+ (NSDictionary *)serialize:(DBTEAMDevicesActive *)valueObj {
  NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

  jsonDict[@"windows"] = [DBArraySerializer serialize:valueObj.windows
                                            withBlock:^id(id elem) {
                                              return elem;
                                            }];
  jsonDict[@"macos"] = [DBArraySerializer serialize:valueObj.macos
                                          withBlock:^id(id elem) {
                                            return elem;
                                          }];
  jsonDict[@"linux"] = [DBArraySerializer serialize:valueObj.linux
                                          withBlock:^id(id elem) {
                                            return elem;
                                          }];
  jsonDict[@"ios"] = [DBArraySerializer serialize:valueObj.ios
                                        withBlock:^id(id elem) {
                                          return elem;
                                        }];
  jsonDict[@"android"] = [DBArraySerializer serialize:valueObj.android
                                            withBlock:^id(id elem) {
                                              return elem;
                                            }];
  jsonDict[@"other"] = [DBArraySerializer serialize:valueObj.other
                                          withBlock:^id(id elem) {
                                            return elem;
                                          }];
  jsonDict[@"total"] = [DBArraySerializer serialize:valueObj.total
                                          withBlock:^id(id elem) {
                                            return elem;
                                          }];

  return jsonDict;
}

+ (DBTEAMDevicesActive *)deserialize:(NSDictionary *)valueDict {
  NSArray<NSNumber *> *windows = [DBArraySerializer deserialize:valueDict[@"windows"]
                                                      withBlock:^id(id elem) {
                                                        return elem;
                                                      }];
  NSArray<NSNumber *> *macos = [DBArraySerializer deserialize:valueDict[@"macos"]
                                                    withBlock:^id(id elem) {
                                                      return elem;
                                                    }];
  NSArray<NSNumber *> *linux = [DBArraySerializer deserialize:valueDict[@"linux"]
                                                    withBlock:^id(id elem) {
                                                      return elem;
                                                    }];
  NSArray<NSNumber *> *ios = [DBArraySerializer deserialize:valueDict[@"ios"]
                                                  withBlock:^id(id elem) {
                                                    return elem;
                                                  }];
  NSArray<NSNumber *> *android = [DBArraySerializer deserialize:valueDict[@"android"]
                                                      withBlock:^id(id elem) {
                                                        return elem;
                                                      }];
  NSArray<NSNumber *> *other = [DBArraySerializer deserialize:valueDict[@"other"]
                                                    withBlock:^id(id elem) {
                                                      return elem;
                                                    }];
  NSArray<NSNumber *> *total = [DBArraySerializer deserialize:valueDict[@"total"]
                                                    withBlock:^id(id elem) {
                                                      return elem;
                                                    }];

  return [[DBTEAMDevicesActive alloc] initWithWindows:windows
                                                macos:macos
                                                linux:linux
                                                  ios:ios
                                              android:android
                                                other:other
                                                total:total];
}

@end
