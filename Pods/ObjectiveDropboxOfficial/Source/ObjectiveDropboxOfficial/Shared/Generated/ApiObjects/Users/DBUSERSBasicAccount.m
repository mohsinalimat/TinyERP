///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import "DBStoneSerializers.h"
#import "DBStoneValidators.h"
#import "DBUSERSAccount.h"
#import "DBUSERSBasicAccount.h"
#import "DBUSERSName.h"

#pragma mark - API Object

@implementation DBUSERSBasicAccount

#pragma mark - Constructors

- (instancetype)initWithAccountId:(NSString *)accountId
                             name:(DBUSERSName *)name
                            email:(NSString *)email
                    emailVerified:(NSNumber *)emailVerified
                         disabled:(NSNumber *)disabled
                       isTeammate:(NSNumber *)isTeammate
                  profilePhotoUrl:(NSString *)profilePhotoUrl
                     teamMemberId:(NSString *)teamMemberId {
  [DBStoneValidators stringValidator:@(40) maxLength:@(40) pattern:nil](accountId);

  self = [super initWithAccountId:accountId
                             name:name
                            email:email
                    emailVerified:emailVerified
                         disabled:disabled
                  profilePhotoUrl:profilePhotoUrl];
  if (self) {
    _isTeammate = isTeammate;
    _teamMemberId = teamMemberId;
  }
  return self;
}

- (instancetype)initWithAccountId:(NSString *)accountId
                             name:(DBUSERSName *)name
                            email:(NSString *)email
                    emailVerified:(NSNumber *)emailVerified
                         disabled:(NSNumber *)disabled
                       isTeammate:(NSNumber *)isTeammate {
  return [self initWithAccountId:accountId
                            name:name
                           email:email
                   emailVerified:emailVerified
                        disabled:disabled
                      isTeammate:isTeammate
                 profilePhotoUrl:nil
                    teamMemberId:nil];
}

#pragma mark - Serialization methods

+ (NSDictionary *)serialize:(id)instance {
  return [DBUSERSBasicAccountSerializer serialize:instance];
}

+ (id)deserialize:(NSDictionary *)dict {
  return [DBUSERSBasicAccountSerializer deserialize:dict];
}

#pragma mark - Description method

- (NSString *)description {
  return [[DBUSERSBasicAccountSerializer serialize:self] description];
}

@end

#pragma mark - Serializer Object

@implementation DBUSERSBasicAccountSerializer

+ (NSDictionary *)serialize:(DBUSERSBasicAccount *)valueObj {
  NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

  jsonDict[@"account_id"] = valueObj.accountId;
  jsonDict[@"name"] = [DBUSERSNameSerializer serialize:valueObj.name];
  jsonDict[@"email"] = valueObj.email;
  jsonDict[@"email_verified"] = valueObj.emailVerified;
  jsonDict[@"disabled"] = valueObj.disabled;
  jsonDict[@"is_teammate"] = valueObj.isTeammate;
  if (valueObj.profilePhotoUrl) {
    jsonDict[@"profile_photo_url"] = valueObj.profilePhotoUrl;
  }
  if (valueObj.teamMemberId) {
    jsonDict[@"team_member_id"] = valueObj.teamMemberId;
  }

  return jsonDict;
}

+ (DBUSERSBasicAccount *)deserialize:(NSDictionary *)valueDict {
  NSString *accountId = valueDict[@"account_id"];
  DBUSERSName *name = [DBUSERSNameSerializer deserialize:valueDict[@"name"]];
  NSString *email = valueDict[@"email"];
  NSNumber *emailVerified = valueDict[@"email_verified"];
  NSNumber *disabled = valueDict[@"disabled"];
  NSNumber *isTeammate = valueDict[@"is_teammate"];
  NSString *profilePhotoUrl = valueDict[@"profile_photo_url"] ?: nil;
  NSString *teamMemberId = valueDict[@"team_member_id"] ?: nil;

  return [[DBUSERSBasicAccount alloc] initWithAccountId:accountId
                                                   name:name
                                                  email:email
                                          emailVerified:emailVerified
                                               disabled:disabled
                                             isTeammate:isTeammate
                                        profilePhotoUrl:profilePhotoUrl
                                           teamMemberId:teamMemberId];
}

@end
