///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import "DBStoneSerializers.h"
#import "DBStoneValidators.h"
#import "DBUSERSAccountType.h"

#pragma mark - API Object

@implementation DBUSERSAccountType

#pragma mark - Constructors

- (instancetype)initWithBasic {
  self = [super init];
  if (self) {
    _tag = DBUSERSAccountTypeBasic;
  }
  return self;
}

- (instancetype)initWithPro {
  self = [super init];
  if (self) {
    _tag = DBUSERSAccountTypePro;
  }
  return self;
}

- (instancetype)initWithBusiness {
  self = [super init];
  if (self) {
    _tag = DBUSERSAccountTypeBusiness;
  }
  return self;
}

#pragma mark - Instance field accessors

#pragma mark - Tag state methods

- (BOOL)isBasic {
  return _tag == DBUSERSAccountTypeBasic;
}

- (BOOL)isPro {
  return _tag == DBUSERSAccountTypePro;
}

- (BOOL)isBusiness {
  return _tag == DBUSERSAccountTypeBusiness;
}

- (NSString *)tagName {
  switch (_tag) {
  case DBUSERSAccountTypeBasic:
    return @"DBUSERSAccountTypeBasic";
  case DBUSERSAccountTypePro:
    return @"DBUSERSAccountTypePro";
  case DBUSERSAccountTypeBusiness:
    return @"DBUSERSAccountTypeBusiness";
  }

  @throw([NSException exceptionWithName:@"InvalidTag" reason:@"Tag has an unknown value." userInfo:nil]);
}

#pragma mark - Serialization methods

+ (NSDictionary *)serialize:(id)instance {
  return [DBUSERSAccountTypeSerializer serialize:instance];
}

+ (id)deserialize:(NSDictionary *)dict {
  return [DBUSERSAccountTypeSerializer deserialize:dict];
}

#pragma mark - Description method

- (NSString *)description {
  return [[DBUSERSAccountTypeSerializer serialize:self] description];
}

@end

#pragma mark - Serializer Object

@implementation DBUSERSAccountTypeSerializer

+ (NSDictionary *)serialize:(DBUSERSAccountType *)valueObj {
  NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

  if ([valueObj isBasic]) {
    jsonDict[@".tag"] = @"basic";
  } else if ([valueObj isPro]) {
    jsonDict[@".tag"] = @"pro";
  } else if ([valueObj isBusiness]) {
    jsonDict[@".tag"] = @"business";
  } else {
    @throw([NSException exceptionWithName:@"InvalidTag"
                                   reason:@"Object not properly initialized. Tag has an unknown value."
                                 userInfo:nil]);
  }

  return jsonDict;
}

+ (DBUSERSAccountType *)deserialize:(NSDictionary *)valueDict {
  NSString *tag = valueDict[@".tag"];

  if ([tag isEqualToString:@"basic"]) {
    return [[DBUSERSAccountType alloc] initWithBasic];
  } else if ([tag isEqualToString:@"pro"]) {
    return [[DBUSERSAccountType alloc] initWithPro];
  } else if ([tag isEqualToString:@"business"]) {
    return [[DBUSERSAccountType alloc] initWithBusiness];
  }

  @throw([NSException
      exceptionWithName:@"InvalidTag"
                 reason:[NSString stringWithFormat:@"Tag has an invalid value: \"%@\".", valueDict[@".tag"]]
               userInfo:nil]);
}

@end
