///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import "DBSHARINGAclUpdatePolicy.h"
#import "DBSHARINGFolderPolicy.h"
#import "DBSHARINGMemberPolicy.h"
#import "DBSHARINGSharedLinkPolicy.h"
#import "DBStoneSerializers.h"
#import "DBStoneValidators.h"

#pragma mark - API Object

@implementation DBSHARINGFolderPolicy

#pragma mark - Constructors

- (instancetype)initWithAclUpdatePolicy:(DBSHARINGAclUpdatePolicy *)aclUpdatePolicy
                       sharedLinkPolicy:(DBSHARINGSharedLinkPolicy *)sharedLinkPolicy
                           memberPolicy:(DBSHARINGMemberPolicy *)memberPolicy
                   resolvedMemberPolicy:(DBSHARINGMemberPolicy *)resolvedMemberPolicy {

  self = [super init];
  if (self) {
    _memberPolicy = memberPolicy;
    _resolvedMemberPolicy = resolvedMemberPolicy;
    _aclUpdatePolicy = aclUpdatePolicy;
    _sharedLinkPolicy = sharedLinkPolicy;
  }
  return self;
}

- (instancetype)initWithAclUpdatePolicy:(DBSHARINGAclUpdatePolicy *)aclUpdatePolicy
                       sharedLinkPolicy:(DBSHARINGSharedLinkPolicy *)sharedLinkPolicy {
  return [self initWithAclUpdatePolicy:aclUpdatePolicy
                      sharedLinkPolicy:sharedLinkPolicy
                          memberPolicy:nil
                  resolvedMemberPolicy:nil];
}

#pragma mark - Serialization methods

+ (NSDictionary *)serialize:(id)instance {
  return [DBSHARINGFolderPolicySerializer serialize:instance];
}

+ (id)deserialize:(NSDictionary *)dict {
  return [DBSHARINGFolderPolicySerializer deserialize:dict];
}

#pragma mark - Description method

- (NSString *)description {
  return [[DBSHARINGFolderPolicySerializer serialize:self] description];
}

@end

#pragma mark - Serializer Object

@implementation DBSHARINGFolderPolicySerializer

+ (NSDictionary *)serialize:(DBSHARINGFolderPolicy *)valueObj {
  NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

  jsonDict[@"acl_update_policy"] = [DBSHARINGAclUpdatePolicySerializer serialize:valueObj.aclUpdatePolicy];
  jsonDict[@"shared_link_policy"] = [DBSHARINGSharedLinkPolicySerializer serialize:valueObj.sharedLinkPolicy];
  if (valueObj.memberPolicy) {
    jsonDict[@"member_policy"] = [DBSHARINGMemberPolicySerializer serialize:valueObj.memberPolicy];
  }
  if (valueObj.resolvedMemberPolicy) {
    jsonDict[@"resolved_member_policy"] = [DBSHARINGMemberPolicySerializer serialize:valueObj.resolvedMemberPolicy];
  }

  return jsonDict;
}

+ (DBSHARINGFolderPolicy *)deserialize:(NSDictionary *)valueDict {
  DBSHARINGAclUpdatePolicy *aclUpdatePolicy =
      [DBSHARINGAclUpdatePolicySerializer deserialize:valueDict[@"acl_update_policy"]];
  DBSHARINGSharedLinkPolicy *sharedLinkPolicy =
      [DBSHARINGSharedLinkPolicySerializer deserialize:valueDict[@"shared_link_policy"]];
  DBSHARINGMemberPolicy *memberPolicy =
      valueDict[@"member_policy"] ? [DBSHARINGMemberPolicySerializer deserialize:valueDict[@"member_policy"]] : nil;
  DBSHARINGMemberPolicy *resolvedMemberPolicy =
      valueDict[@"resolved_member_policy"]
          ? [DBSHARINGMemberPolicySerializer deserialize:valueDict[@"resolved_member_policy"]]
          : nil;

  return [[DBSHARINGFolderPolicy alloc] initWithAclUpdatePolicy:aclUpdatePolicy
                                               sharedLinkPolicy:sharedLinkPolicy
                                                   memberPolicy:memberPolicy
                                           resolvedMemberPolicy:resolvedMemberPolicy];
}

@end
