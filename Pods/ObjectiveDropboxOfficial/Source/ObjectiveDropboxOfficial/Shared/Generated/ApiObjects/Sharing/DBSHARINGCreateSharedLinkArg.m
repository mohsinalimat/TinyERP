///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import "DBSHARINGCreateSharedLinkArg.h"
#import "DBSHARINGPendingUploadMode.h"
#import "DBStoneSerializers.h"
#import "DBStoneValidators.h"

#pragma mark - API Object

@implementation DBSHARINGCreateSharedLinkArg

#pragma mark - Constructors

- (instancetype)initWithPath:(NSString *)path
                    shortUrl:(NSNumber *)shortUrl
               pendingUpload:(DBSHARINGPendingUploadMode *)pendingUpload {

  self = [super init];
  if (self) {
    _path = path;
    _shortUrl = shortUrl ?: @NO;
    _pendingUpload = pendingUpload;
  }
  return self;
}

- (instancetype)initWithPath:(NSString *)path {
  return [self initWithPath:path shortUrl:nil pendingUpload:nil];
}

#pragma mark - Serialization methods

+ (NSDictionary *)serialize:(id)instance {
  return [DBSHARINGCreateSharedLinkArgSerializer serialize:instance];
}

+ (id)deserialize:(NSDictionary *)dict {
  return [DBSHARINGCreateSharedLinkArgSerializer deserialize:dict];
}

#pragma mark - Description method

- (NSString *)description {
  return [[DBSHARINGCreateSharedLinkArgSerializer serialize:self] description];
}

@end

#pragma mark - Serializer Object

@implementation DBSHARINGCreateSharedLinkArgSerializer

+ (NSDictionary *)serialize:(DBSHARINGCreateSharedLinkArg *)valueObj {
  NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

  jsonDict[@"path"] = valueObj.path;
  jsonDict[@"short_url"] = valueObj.shortUrl;
  if (valueObj.pendingUpload) {
    jsonDict[@"pending_upload"] = [DBSHARINGPendingUploadModeSerializer serialize:valueObj.pendingUpload];
  }

  return jsonDict;
}

+ (DBSHARINGCreateSharedLinkArg *)deserialize:(NSDictionary *)valueDict {
  NSString *path = valueDict[@"path"];
  NSNumber *shortUrl = valueDict[@"short_url"] ?: @NO;
  DBSHARINGPendingUploadMode *pendingUpload =
      valueDict[@"pending_upload"] ? [DBSHARINGPendingUploadModeSerializer deserialize:valueDict[@"pending_upload"]]
                                   : nil;

  return [[DBSHARINGCreateSharedLinkArg alloc] initWithPath:path shortUrl:shortUrl pendingUpload:pendingUpload];
}

@end
