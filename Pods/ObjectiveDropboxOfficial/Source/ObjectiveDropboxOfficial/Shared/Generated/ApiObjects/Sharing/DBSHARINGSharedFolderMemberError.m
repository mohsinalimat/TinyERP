///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import "DBSHARINGMemberAccessLevelResult.h"
#import "DBSHARINGSharedFolderMemberError.h"
#import "DBStoneSerializers.h"
#import "DBStoneValidators.h"

#pragma mark - API Object

@implementation DBSHARINGSharedFolderMemberError

@synthesize noExplicitAccess = _noExplicitAccess;

#pragma mark - Constructors

- (instancetype)initWithInvalidDropboxId {
  self = [super init];
  if (self) {
    _tag = DBSHARINGSharedFolderMemberErrorInvalidDropboxId;
  }
  return self;
}

- (instancetype)initWithNotAMember {
  self = [super init];
  if (self) {
    _tag = DBSHARINGSharedFolderMemberErrorNotAMember;
  }
  return self;
}

- (instancetype)initWithNoExplicitAccess:(DBSHARINGMemberAccessLevelResult *)noExplicitAccess {
  self = [super init];
  if (self) {
    _tag = DBSHARINGSharedFolderMemberErrorNoExplicitAccess;
    _noExplicitAccess = noExplicitAccess;
  }
  return self;
}

- (instancetype)initWithOther {
  self = [super init];
  if (self) {
    _tag = DBSHARINGSharedFolderMemberErrorOther;
  }
  return self;
}

#pragma mark - Instance field accessors

- (DBSHARINGMemberAccessLevelResult *)noExplicitAccess {
  if (![self isNoExplicitAccess]) {
    [NSException
         raise:@"IllegalStateException"
        format:@"Invalid tag: required DBSHARINGSharedFolderMemberErrorNoExplicitAccess, but was %@.", [self tagName]];
  }
  return _noExplicitAccess;
}

#pragma mark - Tag state methods

- (BOOL)isInvalidDropboxId {
  return _tag == DBSHARINGSharedFolderMemberErrorInvalidDropboxId;
}

- (BOOL)isNotAMember {
  return _tag == DBSHARINGSharedFolderMemberErrorNotAMember;
}

- (BOOL)isNoExplicitAccess {
  return _tag == DBSHARINGSharedFolderMemberErrorNoExplicitAccess;
}

- (BOOL)isOther {
  return _tag == DBSHARINGSharedFolderMemberErrorOther;
}

- (NSString *)tagName {
  switch (_tag) {
  case DBSHARINGSharedFolderMemberErrorInvalidDropboxId:
    return @"DBSHARINGSharedFolderMemberErrorInvalidDropboxId";
  case DBSHARINGSharedFolderMemberErrorNotAMember:
    return @"DBSHARINGSharedFolderMemberErrorNotAMember";
  case DBSHARINGSharedFolderMemberErrorNoExplicitAccess:
    return @"DBSHARINGSharedFolderMemberErrorNoExplicitAccess";
  case DBSHARINGSharedFolderMemberErrorOther:
    return @"DBSHARINGSharedFolderMemberErrorOther";
  }

  @throw([NSException exceptionWithName:@"InvalidTag" reason:@"Tag has an unknown value." userInfo:nil]);
}

#pragma mark - Serialization methods

+ (NSDictionary *)serialize:(id)instance {
  return [DBSHARINGSharedFolderMemberErrorSerializer serialize:instance];
}

+ (id)deserialize:(NSDictionary *)dict {
  return [DBSHARINGSharedFolderMemberErrorSerializer deserialize:dict];
}

#pragma mark - Description method

- (NSString *)description {
  return [[DBSHARINGSharedFolderMemberErrorSerializer serialize:self] description];
}

@end

#pragma mark - Serializer Object

@implementation DBSHARINGSharedFolderMemberErrorSerializer

+ (NSDictionary *)serialize:(DBSHARINGSharedFolderMemberError *)valueObj {
  NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

  if ([valueObj isInvalidDropboxId]) {
    jsonDict[@".tag"] = @"invalid_dropbox_id";
  } else if ([valueObj isNotAMember]) {
    jsonDict[@".tag"] = @"not_a_member";
  } else if ([valueObj isNoExplicitAccess]) {
    jsonDict[@"no_explicit_access"] =
        [[DBSHARINGMemberAccessLevelResultSerializer serialize:valueObj.noExplicitAccess] mutableCopy];
    jsonDict[@".tag"] = @"no_explicit_access";
  } else if ([valueObj isOther]) {
    jsonDict[@".tag"] = @"other";
  } else {
    @throw([NSException exceptionWithName:@"InvalidTag"
                                   reason:@"Object not properly initialized. Tag has an unknown value."
                                 userInfo:nil]);
  }

  return jsonDict;
}

+ (DBSHARINGSharedFolderMemberError *)deserialize:(NSDictionary *)valueDict {
  NSString *tag = valueDict[@".tag"];

  if ([tag isEqualToString:@"invalid_dropbox_id"]) {
    return [[DBSHARINGSharedFolderMemberError alloc] initWithInvalidDropboxId];
  } else if ([tag isEqualToString:@"not_a_member"]) {
    return [[DBSHARINGSharedFolderMemberError alloc] initWithNotAMember];
  } else if ([tag isEqualToString:@"no_explicit_access"]) {
    DBSHARINGMemberAccessLevelResult *noExplicitAccess =
        [DBSHARINGMemberAccessLevelResultSerializer deserialize:valueDict];
    return [[DBSHARINGSharedFolderMemberError alloc] initWithNoExplicitAccess:noExplicitAccess];
  } else if ([tag isEqualToString:@"other"]) {
    return [[DBSHARINGSharedFolderMemberError alloc] initWithOther];
  }

  @throw([NSException
      exceptionWithName:@"InvalidTag"
                 reason:[NSString stringWithFormat:@"Tag has an invalid value: \"%@\".", valueDict[@".tag"]]
               userInfo:nil]);
}

@end
