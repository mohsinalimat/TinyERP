///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import "DBSHARINGFileAction.h"
#import "DBStoneSerializers.h"
#import "DBStoneValidators.h"

#pragma mark - API Object

@implementation DBSHARINGFileAction

#pragma mark - Constructors

- (instancetype)initWithEditContents {
  self = [super init];
  if (self) {
    _tag = DBSHARINGFileActionEditContents;
  }
  return self;
}

- (instancetype)initWithInviteViewer {
  self = [super init];
  if (self) {
    _tag = DBSHARINGFileActionInviteViewer;
  }
  return self;
}

- (instancetype)initWithInviteViewerNoComment {
  self = [super init];
  if (self) {
    _tag = DBSHARINGFileActionInviteViewerNoComment;
  }
  return self;
}

- (instancetype)initWithUnshare {
  self = [super init];
  if (self) {
    _tag = DBSHARINGFileActionUnshare;
  }
  return self;
}

- (instancetype)initWithRelinquishMembership {
  self = [super init];
  if (self) {
    _tag = DBSHARINGFileActionRelinquishMembership;
  }
  return self;
}

- (instancetype)initWithShareLink {
  self = [super init];
  if (self) {
    _tag = DBSHARINGFileActionShareLink;
  }
  return self;
}

- (instancetype)initWithCreateLink {
  self = [super init];
  if (self) {
    _tag = DBSHARINGFileActionCreateLink;
  }
  return self;
}

- (instancetype)initWithOther {
  self = [super init];
  if (self) {
    _tag = DBSHARINGFileActionOther;
  }
  return self;
}

#pragma mark - Instance field accessors

#pragma mark - Tag state methods

- (BOOL)isEditContents {
  return _tag == DBSHARINGFileActionEditContents;
}

- (BOOL)isInviteViewer {
  return _tag == DBSHARINGFileActionInviteViewer;
}

- (BOOL)isInviteViewerNoComment {
  return _tag == DBSHARINGFileActionInviteViewerNoComment;
}

- (BOOL)isUnshare {
  return _tag == DBSHARINGFileActionUnshare;
}

- (BOOL)isRelinquishMembership {
  return _tag == DBSHARINGFileActionRelinquishMembership;
}

- (BOOL)isShareLink {
  return _tag == DBSHARINGFileActionShareLink;
}

- (BOOL)isCreateLink {
  return _tag == DBSHARINGFileActionCreateLink;
}

- (BOOL)isOther {
  return _tag == DBSHARINGFileActionOther;
}

- (NSString *)tagName {
  switch (_tag) {
  case DBSHARINGFileActionEditContents:
    return @"DBSHARINGFileActionEditContents";
  case DBSHARINGFileActionInviteViewer:
    return @"DBSHARINGFileActionInviteViewer";
  case DBSHARINGFileActionInviteViewerNoComment:
    return @"DBSHARINGFileActionInviteViewerNoComment";
  case DBSHARINGFileActionUnshare:
    return @"DBSHARINGFileActionUnshare";
  case DBSHARINGFileActionRelinquishMembership:
    return @"DBSHARINGFileActionRelinquishMembership";
  case DBSHARINGFileActionShareLink:
    return @"DBSHARINGFileActionShareLink";
  case DBSHARINGFileActionCreateLink:
    return @"DBSHARINGFileActionCreateLink";
  case DBSHARINGFileActionOther:
    return @"DBSHARINGFileActionOther";
  }

  @throw([NSException exceptionWithName:@"InvalidTag" reason:@"Tag has an unknown value." userInfo:nil]);
}

#pragma mark - Serialization methods

+ (NSDictionary *)serialize:(id)instance {
  return [DBSHARINGFileActionSerializer serialize:instance];
}

+ (id)deserialize:(NSDictionary *)dict {
  return [DBSHARINGFileActionSerializer deserialize:dict];
}

#pragma mark - Description method

- (NSString *)description {
  return [[DBSHARINGFileActionSerializer serialize:self] description];
}

@end

#pragma mark - Serializer Object

@implementation DBSHARINGFileActionSerializer

+ (NSDictionary *)serialize:(DBSHARINGFileAction *)valueObj {
  NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

  if ([valueObj isEditContents]) {
    jsonDict[@".tag"] = @"edit_contents";
  } else if ([valueObj isInviteViewer]) {
    jsonDict[@".tag"] = @"invite_viewer";
  } else if ([valueObj isInviteViewerNoComment]) {
    jsonDict[@".tag"] = @"invite_viewer_no_comment";
  } else if ([valueObj isUnshare]) {
    jsonDict[@".tag"] = @"unshare";
  } else if ([valueObj isRelinquishMembership]) {
    jsonDict[@".tag"] = @"relinquish_membership";
  } else if ([valueObj isShareLink]) {
    jsonDict[@".tag"] = @"share_link";
  } else if ([valueObj isCreateLink]) {
    jsonDict[@".tag"] = @"create_link";
  } else if ([valueObj isOther]) {
    jsonDict[@".tag"] = @"other";
  } else {
    @throw([NSException exceptionWithName:@"InvalidTag"
                                   reason:@"Object not properly initialized. Tag has an unknown value."
                                 userInfo:nil]);
  }

  return jsonDict;
}

+ (DBSHARINGFileAction *)deserialize:(NSDictionary *)valueDict {
  NSString *tag = valueDict[@".tag"];

  if ([tag isEqualToString:@"edit_contents"]) {
    return [[DBSHARINGFileAction alloc] initWithEditContents];
  } else if ([tag isEqualToString:@"invite_viewer"]) {
    return [[DBSHARINGFileAction alloc] initWithInviteViewer];
  } else if ([tag isEqualToString:@"invite_viewer_no_comment"]) {
    return [[DBSHARINGFileAction alloc] initWithInviteViewerNoComment];
  } else if ([tag isEqualToString:@"unshare"]) {
    return [[DBSHARINGFileAction alloc] initWithUnshare];
  } else if ([tag isEqualToString:@"relinquish_membership"]) {
    return [[DBSHARINGFileAction alloc] initWithRelinquishMembership];
  } else if ([tag isEqualToString:@"share_link"]) {
    return [[DBSHARINGFileAction alloc] initWithShareLink];
  } else if ([tag isEqualToString:@"create_link"]) {
    return [[DBSHARINGFileAction alloc] initWithCreateLink];
  } else if ([tag isEqualToString:@"other"]) {
    return [[DBSHARINGFileAction alloc] initWithOther];
  }

  @throw([NSException
      exceptionWithName:@"InvalidTag"
                 reason:[NSString stringWithFormat:@"Tag has an invalid value: \"%@\".", valueDict[@".tag"]]
               userInfo:nil]);
}

@end
