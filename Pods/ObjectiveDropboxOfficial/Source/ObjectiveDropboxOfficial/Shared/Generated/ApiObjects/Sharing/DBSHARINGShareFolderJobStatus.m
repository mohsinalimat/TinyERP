///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import "DBASYNCPollResultBase.h"
#import "DBSHARINGShareFolderError.h"
#import "DBSHARINGShareFolderJobStatus.h"
#import "DBSHARINGSharedFolderMetadata.h"
#import "DBStoneSerializers.h"
#import "DBStoneValidators.h"

#pragma mark - API Object

@implementation DBSHARINGShareFolderJobStatus

@synthesize complete = _complete;
@synthesize failed = _failed;

#pragma mark - Constructors

- (instancetype)initWithInProgress {
  self = [super init];
  if (self) {
    _tag = DBSHARINGShareFolderJobStatusInProgress;
  }
  return self;
}

- (instancetype)initWithComplete:(DBSHARINGSharedFolderMetadata *)complete {
  self = [super init];
  if (self) {
    _tag = DBSHARINGShareFolderJobStatusComplete;
    _complete = complete;
  }
  return self;
}

- (instancetype)initWithFailed:(DBSHARINGShareFolderError *)failed {
  self = [super init];
  if (self) {
    _tag = DBSHARINGShareFolderJobStatusFailed;
    _failed = failed;
  }
  return self;
}

#pragma mark - Instance field accessors

- (DBSHARINGSharedFolderMetadata *)complete {
  if (![self isComplete]) {
    [NSException raise:@"IllegalStateException"
                format:@"Invalid tag: required DBSHARINGShareFolderJobStatusComplete, but was %@.", [self tagName]];
  }
  return _complete;
}

- (DBSHARINGShareFolderError *)failed {
  if (![self isFailed]) {
    [NSException raise:@"IllegalStateException"
                format:@"Invalid tag: required DBSHARINGShareFolderJobStatusFailed, but was %@.", [self tagName]];
  }
  return _failed;
}

#pragma mark - Tag state methods

- (BOOL)isInProgress {
  return _tag == DBSHARINGShareFolderJobStatusInProgress;
}

- (BOOL)isComplete {
  return _tag == DBSHARINGShareFolderJobStatusComplete;
}

- (BOOL)isFailed {
  return _tag == DBSHARINGShareFolderJobStatusFailed;
}

- (NSString *)tagName {
  switch (_tag) {
  case DBSHARINGShareFolderJobStatusInProgress:
    return @"DBSHARINGShareFolderJobStatusInProgress";
  case DBSHARINGShareFolderJobStatusComplete:
    return @"DBSHARINGShareFolderJobStatusComplete";
  case DBSHARINGShareFolderJobStatusFailed:
    return @"DBSHARINGShareFolderJobStatusFailed";
  }

  @throw([NSException exceptionWithName:@"InvalidTag" reason:@"Tag has an unknown value." userInfo:nil]);
}

#pragma mark - Serialization methods

+ (NSDictionary *)serialize:(id)instance {
  return [DBSHARINGShareFolderJobStatusSerializer serialize:instance];
}

+ (id)deserialize:(NSDictionary *)dict {
  return [DBSHARINGShareFolderJobStatusSerializer deserialize:dict];
}

#pragma mark - Description method

- (NSString *)description {
  return [[DBSHARINGShareFolderJobStatusSerializer serialize:self] description];
}

@end

#pragma mark - Serializer Object

@implementation DBSHARINGShareFolderJobStatusSerializer

+ (NSDictionary *)serialize:(DBSHARINGShareFolderJobStatus *)valueObj {
  NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

  if ([valueObj isInProgress]) {
    jsonDict[@".tag"] = @"in_progress";
  } else if ([valueObj isComplete]) {
    jsonDict[@"complete"] = [[DBSHARINGSharedFolderMetadataSerializer serialize:valueObj.complete] mutableCopy];
    jsonDict[@".tag"] = @"complete";
  } else if ([valueObj isFailed]) {
    jsonDict[@"failed"] = [[DBSHARINGShareFolderErrorSerializer serialize:valueObj.failed] mutableCopy];
    jsonDict[@".tag"] = @"failed";
  } else {
    @throw([NSException exceptionWithName:@"InvalidTag"
                                   reason:@"Object not properly initialized. Tag has an unknown value."
                                 userInfo:nil]);
  }

  return jsonDict;
}

+ (DBSHARINGShareFolderJobStatus *)deserialize:(NSDictionary *)valueDict {
  NSString *tag = valueDict[@".tag"];

  if ([tag isEqualToString:@"in_progress"]) {
    return [[DBSHARINGShareFolderJobStatus alloc] initWithInProgress];
  } else if ([tag isEqualToString:@"complete"]) {
    DBSHARINGSharedFolderMetadata *complete = [DBSHARINGSharedFolderMetadataSerializer deserialize:valueDict];
    return [[DBSHARINGShareFolderJobStatus alloc] initWithComplete:complete];
  } else if ([tag isEqualToString:@"failed"]) {
    DBSHARINGShareFolderError *failed = [DBSHARINGShareFolderErrorSerializer deserialize:valueDict[@"failed"]];
    return [[DBSHARINGShareFolderJobStatus alloc] initWithFailed:failed];
  }

  @throw([NSException
      exceptionWithName:@"InvalidTag"
                 reason:[NSString stringWithFormat:@"Tag has an invalid value: \"%@\".", valueDict[@".tag"]]
               userInfo:nil]);
}

@end
