///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import "DBSHARINGAclUpdatePolicy.h"
#import "DBSHARINGMemberPolicy.h"
#import "DBSHARINGShareFolderArg.h"
#import "DBSHARINGSharedLinkPolicy.h"
#import "DBStoneSerializers.h"
#import "DBStoneValidators.h"

#pragma mark - API Object

@implementation DBSHARINGShareFolderArg

#pragma mark - Constructors

- (instancetype)initWithPath:(NSString *)path
                memberPolicy:(DBSHARINGMemberPolicy *)memberPolicy
             aclUpdatePolicy:(DBSHARINGAclUpdatePolicy *)aclUpdatePolicy
            sharedLinkPolicy:(DBSHARINGSharedLinkPolicy *)sharedLinkPolicy
                  forceAsync:(NSNumber *)forceAsync {
  [DBStoneValidators stringValidator:nil maxLength:nil pattern:@"(/(.|[\\r\\n])*)|(ns:[0-9]+(/.*)?)"](path);

  self = [super init];
  if (self) {
    _path = path;
    _memberPolicy = memberPolicy ?: [[DBSHARINGMemberPolicy alloc] initWithAnyone];
    _aclUpdatePolicy = aclUpdatePolicy ?: [[DBSHARINGAclUpdatePolicy alloc] initWithOwner];
    _sharedLinkPolicy = sharedLinkPolicy ?: [[DBSHARINGSharedLinkPolicy alloc] initWithAnyone];
    _forceAsync = forceAsync ?: @NO;
  }
  return self;
}

- (instancetype)initWithPath:(NSString *)path {
  return [self initWithPath:path memberPolicy:nil aclUpdatePolicy:nil sharedLinkPolicy:nil forceAsync:nil];
}

#pragma mark - Serialization methods

+ (NSDictionary *)serialize:(id)instance {
  return [DBSHARINGShareFolderArgSerializer serialize:instance];
}

+ (id)deserialize:(NSDictionary *)dict {
  return [DBSHARINGShareFolderArgSerializer deserialize:dict];
}

#pragma mark - Description method

- (NSString *)description {
  return [[DBSHARINGShareFolderArgSerializer serialize:self] description];
}

@end

#pragma mark - Serializer Object

@implementation DBSHARINGShareFolderArgSerializer

+ (NSDictionary *)serialize:(DBSHARINGShareFolderArg *)valueObj {
  NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

  jsonDict[@"path"] = valueObj.path;
  jsonDict[@"member_policy"] = [DBSHARINGMemberPolicySerializer serialize:valueObj.memberPolicy];
  jsonDict[@"acl_update_policy"] = [DBSHARINGAclUpdatePolicySerializer serialize:valueObj.aclUpdatePolicy];
  jsonDict[@"shared_link_policy"] = [DBSHARINGSharedLinkPolicySerializer serialize:valueObj.sharedLinkPolicy];
  jsonDict[@"force_async"] = valueObj.forceAsync;

  return jsonDict;
}

+ (DBSHARINGShareFolderArg *)deserialize:(NSDictionary *)valueDict {
  NSString *path = valueDict[@"path"];
  DBSHARINGMemberPolicy *memberPolicy = valueDict[@"member_policy"]
                                            ? [DBSHARINGMemberPolicySerializer deserialize:valueDict[@"member_policy"]]
                                            : [[DBSHARINGMemberPolicy alloc] initWithAnyone];
  DBSHARINGAclUpdatePolicy *aclUpdatePolicy =
      valueDict[@"acl_update_policy"] ? [DBSHARINGAclUpdatePolicySerializer deserialize:valueDict[@"acl_update_policy"]]
                                      : [[DBSHARINGAclUpdatePolicy alloc] initWithOwner];
  DBSHARINGSharedLinkPolicy *sharedLinkPolicy =
      valueDict[@"shared_link_policy"]
          ? [DBSHARINGSharedLinkPolicySerializer deserialize:valueDict[@"shared_link_policy"]]
          : [[DBSHARINGSharedLinkPolicy alloc] initWithAnyone];
  NSNumber *forceAsync = valueDict[@"force_async"] ?: @NO;

  return [[DBSHARINGShareFolderArg alloc] initWithPath:path
                                          memberPolicy:memberPolicy
                                       aclUpdatePolicy:aclUpdatePolicy
                                      sharedLinkPolicy:sharedLinkPolicy
                                            forceAsync:forceAsync];
}

@end
