///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import "DBASYNCPollResultBase.h"
#import "DBSHARINGJobError.h"
#import "DBSHARINGJobStatus.h"
#import "DBStoneSerializers.h"
#import "DBStoneValidators.h"

#pragma mark - API Object

@implementation DBSHARINGJobStatus

@synthesize failed = _failed;

#pragma mark - Constructors

- (instancetype)initWithInProgress {
  self = [super init];
  if (self) {
    _tag = DBSHARINGJobStatusInProgress;
  }
  return self;
}

- (instancetype)initWithComplete {
  self = [super init];
  if (self) {
    _tag = DBSHARINGJobStatusComplete;
  }
  return self;
}

- (instancetype)initWithFailed:(DBSHARINGJobError *)failed {
  self = [super init];
  if (self) {
    _tag = DBSHARINGJobStatusFailed;
    _failed = failed;
  }
  return self;
}

#pragma mark - Instance field accessors

- (DBSHARINGJobError *)failed {
  if (![self isFailed]) {
    [NSException raise:@"IllegalStateException"
                format:@"Invalid tag: required DBSHARINGJobStatusFailed, but was %@.", [self tagName]];
  }
  return _failed;
}

#pragma mark - Tag state methods

- (BOOL)isInProgress {
  return _tag == DBSHARINGJobStatusInProgress;
}

- (BOOL)isComplete {
  return _tag == DBSHARINGJobStatusComplete;
}

- (BOOL)isFailed {
  return _tag == DBSHARINGJobStatusFailed;
}

- (NSString *)tagName {
  switch (_tag) {
  case DBSHARINGJobStatusInProgress:
    return @"DBSHARINGJobStatusInProgress";
  case DBSHARINGJobStatusComplete:
    return @"DBSHARINGJobStatusComplete";
  case DBSHARINGJobStatusFailed:
    return @"DBSHARINGJobStatusFailed";
  }

  @throw([NSException exceptionWithName:@"InvalidTag" reason:@"Tag has an unknown value." userInfo:nil]);
}

#pragma mark - Serialization methods

+ (NSDictionary *)serialize:(id)instance {
  return [DBSHARINGJobStatusSerializer serialize:instance];
}

+ (id)deserialize:(NSDictionary *)dict {
  return [DBSHARINGJobStatusSerializer deserialize:dict];
}

#pragma mark - Description method

- (NSString *)description {
  return [[DBSHARINGJobStatusSerializer serialize:self] description];
}

@end

#pragma mark - Serializer Object

@implementation DBSHARINGJobStatusSerializer

+ (NSDictionary *)serialize:(DBSHARINGJobStatus *)valueObj {
  NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

  if ([valueObj isInProgress]) {
    jsonDict[@".tag"] = @"in_progress";
  } else if ([valueObj isComplete]) {
    jsonDict[@".tag"] = @"complete";
  } else if ([valueObj isFailed]) {
    jsonDict[@"failed"] = [[DBSHARINGJobErrorSerializer serialize:valueObj.failed] mutableCopy];
    jsonDict[@".tag"] = @"failed";
  } else {
    @throw([NSException exceptionWithName:@"InvalidTag"
                                   reason:@"Object not properly initialized. Tag has an unknown value."
                                 userInfo:nil]);
  }

  return jsonDict;
}

+ (DBSHARINGJobStatus *)deserialize:(NSDictionary *)valueDict {
  NSString *tag = valueDict[@".tag"];

  if ([tag isEqualToString:@"in_progress"]) {
    return [[DBSHARINGJobStatus alloc] initWithInProgress];
  } else if ([tag isEqualToString:@"complete"]) {
    return [[DBSHARINGJobStatus alloc] initWithComplete];
  } else if ([tag isEqualToString:@"failed"]) {
    DBSHARINGJobError *failed = [DBSHARINGJobErrorSerializer deserialize:valueDict[@"failed"]];
    return [[DBSHARINGJobStatus alloc] initWithFailed:failed];
  }

  @throw([NSException
      exceptionWithName:@"InvalidTag"
                 reason:[NSString stringWithFormat:@"Tag has an invalid value: \"%@\".", valueDict[@".tag"]]
               userInfo:nil]);
}

@end
