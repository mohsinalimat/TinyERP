///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import "DBSHARINGAddFolderMemberArg.h"
#import "DBSHARINGAddMember.h"
#import "DBStoneSerializers.h"
#import "DBStoneValidators.h"

#pragma mark - API Object

@implementation DBSHARINGAddFolderMemberArg

#pragma mark - Constructors

- (instancetype)initWithSharedFolderId:(NSString *)sharedFolderId
                               members:(NSArray<DBSHARINGAddMember *> *)members
                                 quiet:(NSNumber *)quiet
                         customMessage:(NSString *)customMessage {
  [DBStoneValidators stringValidator:nil maxLength:nil pattern:@"[-_0-9a-zA-Z:]+"](sharedFolderId);
  [DBStoneValidators arrayValidator:nil maxItems:nil itemValidator:nil](members);
  [DBStoneValidators
   nullableValidator:[DBStoneValidators stringValidator:@(1) maxLength:nil pattern:nil]](customMessage);

  self = [super init];
  if (self) {
    _sharedFolderId = sharedFolderId;
    _members = members;
    _quiet = quiet ?: @NO;
    _customMessage = customMessage;
  }
  return self;
}

- (instancetype)initWithSharedFolderId:(NSString *)sharedFolderId members:(NSArray<DBSHARINGAddMember *> *)members {
  return [self initWithSharedFolderId:sharedFolderId members:members quiet:nil customMessage:nil];
}

#pragma mark - Serialization methods

+ (NSDictionary *)serialize:(id)instance {
  return [DBSHARINGAddFolderMemberArgSerializer serialize:instance];
}

+ (id)deserialize:(NSDictionary *)dict {
  return [DBSHARINGAddFolderMemberArgSerializer deserialize:dict];
}

#pragma mark - Description method

- (NSString *)description {
  return [[DBSHARINGAddFolderMemberArgSerializer serialize:self] description];
}

@end

#pragma mark - Serializer Object

@implementation DBSHARINGAddFolderMemberArgSerializer

+ (NSDictionary *)serialize:(DBSHARINGAddFolderMemberArg *)valueObj {
  NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

  jsonDict[@"shared_folder_id"] = valueObj.sharedFolderId;
  jsonDict[@"members"] = [DBArraySerializer serialize:valueObj.members
                                            withBlock:^id(id elem) {
                                              return [DBSHARINGAddMemberSerializer serialize:elem];
                                            }];
  jsonDict[@"quiet"] = valueObj.quiet;
  if (valueObj.customMessage) {
    jsonDict[@"custom_message"] = valueObj.customMessage;
  }

  return jsonDict;
}

+ (DBSHARINGAddFolderMemberArg *)deserialize:(NSDictionary *)valueDict {
  NSString *sharedFolderId = valueDict[@"shared_folder_id"];
  NSArray<DBSHARINGAddMember *> *members =
      [DBArraySerializer deserialize:valueDict[@"members"]
                           withBlock:^id(id elem) {
                             return [DBSHARINGAddMemberSerializer deserialize:elem];
                           }];
  NSNumber *quiet = valueDict[@"quiet"] ?: @NO;
  NSString *customMessage = valueDict[@"custom_message"] ?: nil;

  return [[DBSHARINGAddFolderMemberArg alloc] initWithSharedFolderId:sharedFolderId
                                                             members:members
                                                               quiet:quiet
                                                       customMessage:customMessage];
}

@end
