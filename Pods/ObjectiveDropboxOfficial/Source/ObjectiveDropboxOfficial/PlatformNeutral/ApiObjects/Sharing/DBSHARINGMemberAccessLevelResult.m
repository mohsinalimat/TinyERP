///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import "DBSHARINGAccessLevel.h"
#import "DBSHARINGMemberAccessLevelResult.h"
#import "DBSHARINGParentFolderAccessInfo.h"
#import "DBStoneSerializers.h"
#import "DBStoneValidators.h"

#pragma mark - API Object

@implementation DBSHARINGMemberAccessLevelResult

#pragma mark - Constructors

- (instancetype)initWithAccessLevel:(DBSHARINGAccessLevel *)accessLevel
                            warning:(NSString *)warning
                      accessDetails:(NSArray<DBSHARINGParentFolderAccessInfo *> *)accessDetails {
  [DBStoneValidators
   nullableValidator:[DBStoneValidators arrayValidator:nil maxItems:nil itemValidator:nil]](accessDetails);

  self = [super init];
  if (self) {
    _accessLevel = accessLevel;
    _warning = warning;
    _accessDetails = accessDetails;
  }
  return self;
}

- (instancetype)init {
  return [self initWithAccessLevel:nil warning:nil accessDetails:nil];
}

#pragma mark - Serialization methods

+ (NSDictionary *)serialize:(id)instance {
  return [DBSHARINGMemberAccessLevelResultSerializer serialize:instance];
}

+ (id)deserialize:(NSDictionary *)dict {
  return [DBSHARINGMemberAccessLevelResultSerializer deserialize:dict];
}

#pragma mark - Description method

- (NSString *)description {
  return [[DBSHARINGMemberAccessLevelResultSerializer serialize:self] description];
}

@end

#pragma mark - Serializer Object

@implementation DBSHARINGMemberAccessLevelResultSerializer

+ (NSDictionary *)serialize:(DBSHARINGMemberAccessLevelResult *)valueObj {
  NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

  if (valueObj.accessLevel) {
    jsonDict[@"access_level"] = [DBSHARINGAccessLevelSerializer serialize:valueObj.accessLevel];
  }
  if (valueObj.warning) {
    jsonDict[@"warning"] = valueObj.warning;
  }
  if (valueObj.accessDetails) {
    jsonDict[@"access_details"] =
        [DBArraySerializer serialize:valueObj.accessDetails
                           withBlock:^id(id elem) {
                             return [DBSHARINGParentFolderAccessInfoSerializer serialize:elem];
                           }];
  }

  return jsonDict;
}

+ (DBSHARINGMemberAccessLevelResult *)deserialize:(NSDictionary *)valueDict {
  DBSHARINGAccessLevel *accessLevel =
      valueDict[@"access_level"] ? [DBSHARINGAccessLevelSerializer deserialize:valueDict[@"access_level"]] : nil;
  NSString *warning = valueDict[@"warning"] ?: nil;
  NSArray<DBSHARINGParentFolderAccessInfo *> *accessDetails =
      valueDict[@"access_details"]
          ? [DBArraySerializer deserialize:valueDict[@"access_details"]
                                 withBlock:^id(id elem) {
                                   return [DBSHARINGParentFolderAccessInfoSerializer deserialize:elem];
                                 }]
          : nil;

  return [[DBSHARINGMemberAccessLevelResult alloc] initWithAccessLevel:accessLevel
                                                               warning:warning
                                                         accessDetails:accessDetails];
}

@end
