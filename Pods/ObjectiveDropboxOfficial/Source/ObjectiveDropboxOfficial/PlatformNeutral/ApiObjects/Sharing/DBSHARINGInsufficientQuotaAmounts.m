///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import "DBSHARINGInsufficientQuotaAmounts.h"
#import "DBStoneSerializers.h"
#import "DBStoneValidators.h"

#pragma mark - API Object

@implementation DBSHARINGInsufficientQuotaAmounts

#pragma mark - Constructors

- (instancetype)initWithSpaceNeeded:(NSNumber *)spaceNeeded
                      spaceShortage:(NSNumber *)spaceShortage
                          spaceLeft:(NSNumber *)spaceLeft {

  self = [super init];
  if (self) {
    _spaceNeeded = spaceNeeded;
    _spaceShortage = spaceShortage;
    _spaceLeft = spaceLeft;
  }
  return self;
}

#pragma mark - Serialization methods

+ (NSDictionary *)serialize:(id)instance {
  return [DBSHARINGInsufficientQuotaAmountsSerializer serialize:instance];
}

+ (id)deserialize:(NSDictionary *)dict {
  return [DBSHARINGInsufficientQuotaAmountsSerializer deserialize:dict];
}

#pragma mark - Description method

- (NSString *)description {
  return [[DBSHARINGInsufficientQuotaAmountsSerializer serialize:self] description];
}

@end

#pragma mark - Serializer Object

@implementation DBSHARINGInsufficientQuotaAmountsSerializer

+ (NSDictionary *)serialize:(DBSHARINGInsufficientQuotaAmounts *)valueObj {
  NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

  jsonDict[@"space_needed"] = valueObj.spaceNeeded;
  jsonDict[@"space_shortage"] = valueObj.spaceShortage;
  jsonDict[@"space_left"] = valueObj.spaceLeft;

  return jsonDict;
}

+ (DBSHARINGInsufficientQuotaAmounts *)deserialize:(NSDictionary *)valueDict {
  NSNumber *spaceNeeded = valueDict[@"space_needed"];
  NSNumber *spaceShortage = valueDict[@"space_shortage"];
  NSNumber *spaceLeft = valueDict[@"space_left"];

  return [[DBSHARINGInsufficientQuotaAmounts alloc] initWithSpaceNeeded:spaceNeeded
                                                          spaceShortage:spaceShortage
                                                              spaceLeft:spaceLeft];
}

@end
