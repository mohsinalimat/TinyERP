///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import "DBSHARINGGetSharedLinksResult.h"
#import "DBSHARINGLinkMetadata.h"
#import "DBStoneSerializers.h"
#import "DBStoneValidators.h"

#pragma mark - API Object

@implementation DBSHARINGGetSharedLinksResult

#pragma mark - Constructors

- (instancetype)initWithLinks:(NSArray<DBSHARINGLinkMetadata *> *)links {
  [DBStoneValidators arrayValidator:nil maxItems:nil itemValidator:nil](links);

  self = [super init];
  if (self) {
    _links = links;
  }
  return self;
}

#pragma mark - Serialization methods

+ (NSDictionary *)serialize:(id)instance {
  return [DBSHARINGGetSharedLinksResultSerializer serialize:instance];
}

+ (id)deserialize:(NSDictionary *)dict {
  return [DBSHARINGGetSharedLinksResultSerializer deserialize:dict];
}

#pragma mark - Description method

- (NSString *)description {
  return [[DBSHARINGGetSharedLinksResultSerializer serialize:self] description];
}

@end

#pragma mark - Serializer Object

@implementation DBSHARINGGetSharedLinksResultSerializer

+ (NSDictionary *)serialize:(DBSHARINGGetSharedLinksResult *)valueObj {
  NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

  jsonDict[@"links"] = [DBArraySerializer serialize:valueObj.links
                                          withBlock:^id(id elem) {
                                            return [DBSHARINGLinkMetadataSerializer serialize:elem];
                                          }];

  return jsonDict;
}

+ (DBSHARINGGetSharedLinksResult *)deserialize:(NSDictionary *)valueDict {
  NSArray<DBSHARINGLinkMetadata *> *links =
      [DBArraySerializer deserialize:valueDict[@"links"]
                           withBlock:^id(id elem) {
                             return [DBSHARINGLinkMetadataSerializer deserialize:elem];
                           }];

  return [[DBSHARINGGetSharedLinksResult alloc] initWithLinks:links];
}

@end
