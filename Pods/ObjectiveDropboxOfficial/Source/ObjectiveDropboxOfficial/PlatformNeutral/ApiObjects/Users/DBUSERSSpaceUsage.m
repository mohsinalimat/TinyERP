///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import "DBStoneSerializers.h"
#import "DBStoneValidators.h"
#import "DBUSERSSpaceAllocation.h"
#import "DBUSERSSpaceUsage.h"

#pragma mark - API Object

@implementation DBUSERSSpaceUsage

#pragma mark - Constructors

- (instancetype)initWithUsed:(NSNumber *)used allocation:(DBUSERSSpaceAllocation *)allocation {

  self = [super init];
  if (self) {
    _used = used;
    _allocation = allocation;
  }
  return self;
}

#pragma mark - Serialization methods

+ (NSDictionary *)serialize:(id)instance {
  return [DBUSERSSpaceUsageSerializer serialize:instance];
}

+ (id)deserialize:(NSDictionary *)dict {
  return [DBUSERSSpaceUsageSerializer deserialize:dict];
}

#pragma mark - Description method

- (NSString *)description {
  return [[DBUSERSSpaceUsageSerializer serialize:self] description];
}

@end

#pragma mark - Serializer Object

@implementation DBUSERSSpaceUsageSerializer

+ (NSDictionary *)serialize:(DBUSERSSpaceUsage *)valueObj {
  NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

  jsonDict[@"used"] = valueObj.used;
  jsonDict[@"allocation"] = [DBUSERSSpaceAllocationSerializer serialize:valueObj.allocation];

  return jsonDict;
}

+ (DBUSERSSpaceUsage *)deserialize:(NSDictionary *)valueDict {
  NSNumber *used = valueDict[@"used"];
  DBUSERSSpaceAllocation *allocation = [DBUSERSSpaceAllocationSerializer deserialize:valueDict[@"allocation"]];

  return [[DBUSERSSpaceUsage alloc] initWithUsed:used allocation:allocation];
}

@end
