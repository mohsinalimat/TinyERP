///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import "DBStoneSerializers.h"
#import "DBStoneValidators.h"
#import "DBTEAMBaseDfbReport.h"
#import "DBTEAMGetMembershipReport.h"

#pragma mark - API Object

@implementation DBTEAMGetMembershipReport

#pragma mark - Constructors

- (instancetype)initWithStartDate:(NSString *)startDate
                         teamSize:(NSArray<NSNumber *> *)teamSize
                   pendingInvites:(NSArray<NSNumber *> *)pendingInvites
                    membersJoined:(NSArray<NSNumber *> *)membersJoined
                 suspendedMembers:(NSArray<NSNumber *> *)suspendedMembers
                         licenses:(NSArray<NSNumber *> *)licenses {
  [DBStoneValidators arrayValidator:nil maxItems:nil itemValidator:nil](teamSize);
  [DBStoneValidators arrayValidator:nil maxItems:nil itemValidator:nil](pendingInvites);
  [DBStoneValidators arrayValidator:nil maxItems:nil itemValidator:nil](membersJoined);
  [DBStoneValidators arrayValidator:nil maxItems:nil itemValidator:nil](suspendedMembers);
  [DBStoneValidators arrayValidator:nil maxItems:nil itemValidator:nil](licenses);

  self = [super initWithStartDate:startDate];
  if (self) {
    _teamSize = teamSize;
    _pendingInvites = pendingInvites;
    _membersJoined = membersJoined;
    _suspendedMembers = suspendedMembers;
    _licenses = licenses;
  }
  return self;
}

#pragma mark - Serialization methods

+ (NSDictionary *)serialize:(id)instance {
  return [DBTEAMGetMembershipReportSerializer serialize:instance];
}

+ (id)deserialize:(NSDictionary *)dict {
  return [DBTEAMGetMembershipReportSerializer deserialize:dict];
}

#pragma mark - Description method

- (NSString *)description {
  return [[DBTEAMGetMembershipReportSerializer serialize:self] description];
}

@end

#pragma mark - Serializer Object

@implementation DBTEAMGetMembershipReportSerializer

+ (NSDictionary *)serialize:(DBTEAMGetMembershipReport *)valueObj {
  NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

  jsonDict[@"start_date"] = valueObj.startDate;
  jsonDict[@"team_size"] = [DBArraySerializer serialize:valueObj.teamSize
                                              withBlock:^id(id elem) {
                                                return elem;
                                              }];
  jsonDict[@"pending_invites"] = [DBArraySerializer serialize:valueObj.pendingInvites
                                                    withBlock:^id(id elem) {
                                                      return elem;
                                                    }];
  jsonDict[@"members_joined"] = [DBArraySerializer serialize:valueObj.membersJoined
                                                   withBlock:^id(id elem) {
                                                     return elem;
                                                   }];
  jsonDict[@"suspended_members"] = [DBArraySerializer serialize:valueObj.suspendedMembers
                                                      withBlock:^id(id elem) {
                                                        return elem;
                                                      }];
  jsonDict[@"licenses"] = [DBArraySerializer serialize:valueObj.licenses
                                             withBlock:^id(id elem) {
                                               return elem;
                                             }];

  return jsonDict;
}

+ (DBTEAMGetMembershipReport *)deserialize:(NSDictionary *)valueDict {
  NSString *startDate = valueDict[@"start_date"];
  NSArray<NSNumber *> *teamSize = [DBArraySerializer deserialize:valueDict[@"team_size"]
                                                       withBlock:^id(id elem) {
                                                         return elem;
                                                       }];
  NSArray<NSNumber *> *pendingInvites = [DBArraySerializer deserialize:valueDict[@"pending_invites"]
                                                             withBlock:^id(id elem) {
                                                               return elem;
                                                             }];
  NSArray<NSNumber *> *membersJoined = [DBArraySerializer deserialize:valueDict[@"members_joined"]
                                                            withBlock:^id(id elem) {
                                                              return elem;
                                                            }];
  NSArray<NSNumber *> *suspendedMembers = [DBArraySerializer deserialize:valueDict[@"suspended_members"]
                                                               withBlock:^id(id elem) {
                                                                 return elem;
                                                               }];
  NSArray<NSNumber *> *licenses = [DBArraySerializer deserialize:valueDict[@"licenses"]
                                                       withBlock:^id(id elem) {
                                                         return elem;
                                                       }];

  return [[DBTEAMGetMembershipReport alloc] initWithStartDate:startDate
                                                     teamSize:teamSize
                                               pendingInvites:pendingInvites
                                                membersJoined:membersJoined
                                             suspendedMembers:suspendedMembers
                                                     licenses:licenses];
}

@end
