///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import "DBStoneSerializers.h"
#import "DBStoneValidators.h"
#import "DBTEAMRevokeDeviceSessionArg.h"
#import "DBTEAMRevokeDeviceSessionBatchArg.h"

#pragma mark - API Object

@implementation DBTEAMRevokeDeviceSessionBatchArg

#pragma mark - Constructors

- (instancetype)initWithRevokeDevices:(NSArray<DBTEAMRevokeDeviceSessionArg *> *)revokeDevices {
  [DBStoneValidators arrayValidator:nil maxItems:nil itemValidator:nil](revokeDevices);

  self = [super init];
  if (self) {
    _revokeDevices = revokeDevices;
  }
  return self;
}

#pragma mark - Serialization methods

+ (NSDictionary *)serialize:(id)instance {
  return [DBTEAMRevokeDeviceSessionBatchArgSerializer serialize:instance];
}

+ (id)deserialize:(NSDictionary *)dict {
  return [DBTEAMRevokeDeviceSessionBatchArgSerializer deserialize:dict];
}

#pragma mark - Description method

- (NSString *)description {
  return [[DBTEAMRevokeDeviceSessionBatchArgSerializer serialize:self] description];
}

@end

#pragma mark - Serializer Object

@implementation DBTEAMRevokeDeviceSessionBatchArgSerializer

+ (NSDictionary *)serialize:(DBTEAMRevokeDeviceSessionBatchArg *)valueObj {
  NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

  jsonDict[@"revoke_devices"] = [DBArraySerializer serialize:valueObj.revokeDevices
                                                   withBlock:^id(id elem) {
                                                     return [DBTEAMRevokeDeviceSessionArgSerializer serialize:elem];
                                                   }];

  return jsonDict;
}

+ (DBTEAMRevokeDeviceSessionBatchArg *)deserialize:(NSDictionary *)valueDict {
  NSArray<DBTEAMRevokeDeviceSessionArg *> *revokeDevices =
      [DBArraySerializer deserialize:valueDict[@"revoke_devices"]
                           withBlock:^id(id elem) {
                             return [DBTEAMRevokeDeviceSessionArgSerializer deserialize:elem];
                           }];

  return [[DBTEAMRevokeDeviceSessionBatchArg alloc] initWithRevokeDevices:revokeDevices];
}

@end
