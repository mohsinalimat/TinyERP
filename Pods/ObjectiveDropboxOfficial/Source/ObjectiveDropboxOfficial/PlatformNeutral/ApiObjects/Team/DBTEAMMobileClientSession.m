///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import "DBStoneSerializers.h"
#import "DBStoneValidators.h"
#import "DBTEAMDeviceSession.h"
#import "DBTEAMMobileClientPlatform.h"
#import "DBTEAMMobileClientSession.h"

#pragma mark - API Object

@implementation DBTEAMMobileClientSession

#pragma mark - Constructors

- (instancetype)initWithSessionId:(NSString *)sessionId
                       deviceName:(NSString *)deviceName
                       clientType:(DBTEAMMobileClientPlatform *)clientType
                        ipAddress:(NSString *)ipAddress
                          country:(NSString *)country
                          created:(NSDate *)created
                          updated:(NSDate *)updated
                    clientVersion:(NSString *)clientVersion
                        osVersion:(NSString *)osVersion
                      lastCarrier:(NSString *)lastCarrier {

  self = [super initWithSessionId:sessionId ipAddress:ipAddress country:country created:created updated:updated];
  if (self) {
    _deviceName = deviceName;
    _clientType = clientType;
    _clientVersion = clientVersion;
    _osVersion = osVersion;
    _lastCarrier = lastCarrier;
  }
  return self;
}

- (instancetype)initWithSessionId:(NSString *)sessionId
                       deviceName:(NSString *)deviceName
                       clientType:(DBTEAMMobileClientPlatform *)clientType {
  return [self initWithSessionId:sessionId
                      deviceName:deviceName
                      clientType:clientType
                       ipAddress:nil
                         country:nil
                         created:nil
                         updated:nil
                   clientVersion:nil
                       osVersion:nil
                     lastCarrier:nil];
}

#pragma mark - Serialization methods

+ (NSDictionary *)serialize:(id)instance {
  return [DBTEAMMobileClientSessionSerializer serialize:instance];
}

+ (id)deserialize:(NSDictionary *)dict {
  return [DBTEAMMobileClientSessionSerializer deserialize:dict];
}

#pragma mark - Description method

- (NSString *)description {
  return [[DBTEAMMobileClientSessionSerializer serialize:self] description];
}

@end

#pragma mark - Serializer Object

@implementation DBTEAMMobileClientSessionSerializer

+ (NSDictionary *)serialize:(DBTEAMMobileClientSession *)valueObj {
  NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

  jsonDict[@"session_id"] = valueObj.sessionId;
  jsonDict[@"device_name"] = valueObj.deviceName;
  jsonDict[@"client_type"] = [DBTEAMMobileClientPlatformSerializer serialize:valueObj.clientType];
  if (valueObj.ipAddress) {
    jsonDict[@"ip_address"] = valueObj.ipAddress;
  }
  if (valueObj.country) {
    jsonDict[@"country"] = valueObj.country;
  }
  if (valueObj.created) {
    jsonDict[@"created"] = [DBNSDateSerializer serialize:valueObj.created dateFormat:@"%Y-%m-%dT%H:%M:%SZ"];
  }
  if (valueObj.updated) {
    jsonDict[@"updated"] = [DBNSDateSerializer serialize:valueObj.updated dateFormat:@"%Y-%m-%dT%H:%M:%SZ"];
  }
  if (valueObj.clientVersion) {
    jsonDict[@"client_version"] = valueObj.clientVersion;
  }
  if (valueObj.osVersion) {
    jsonDict[@"os_version"] = valueObj.osVersion;
  }
  if (valueObj.lastCarrier) {
    jsonDict[@"last_carrier"] = valueObj.lastCarrier;
  }

  return jsonDict;
}

+ (DBTEAMMobileClientSession *)deserialize:(NSDictionary *)valueDict {
  NSString *sessionId = valueDict[@"session_id"];
  NSString *deviceName = valueDict[@"device_name"];
  DBTEAMMobileClientPlatform *clientType = [DBTEAMMobileClientPlatformSerializer deserialize:valueDict[@"client_type"]];
  NSString *ipAddress = valueDict[@"ip_address"] ?: nil;
  NSString *country = valueDict[@"country"] ?: nil;
  NSDate *created = valueDict[@"created"]
                        ? [DBNSDateSerializer deserialize:valueDict[@"created"] dateFormat:@"%Y-%m-%dT%H:%M:%SZ"]
                        : nil;
  NSDate *updated = valueDict[@"updated"]
                        ? [DBNSDateSerializer deserialize:valueDict[@"updated"] dateFormat:@"%Y-%m-%dT%H:%M:%SZ"]
                        : nil;
  NSString *clientVersion = valueDict[@"client_version"] ?: nil;
  NSString *osVersion = valueDict[@"os_version"] ?: nil;
  NSString *lastCarrier = valueDict[@"last_carrier"] ?: nil;

  return [[DBTEAMMobileClientSession alloc] initWithSessionId:sessionId
                                                   deviceName:deviceName
                                                   clientType:clientType
                                                    ipAddress:ipAddress
                                                      country:country
                                                      created:created
                                                      updated:updated
                                                clientVersion:clientVersion
                                                    osVersion:osVersion
                                                  lastCarrier:lastCarrier];
}

@end
