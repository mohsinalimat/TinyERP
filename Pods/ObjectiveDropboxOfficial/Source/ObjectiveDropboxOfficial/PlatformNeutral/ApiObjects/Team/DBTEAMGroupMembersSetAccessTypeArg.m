///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import "DBStoneSerializers.h"
#import "DBStoneValidators.h"
#import "DBTEAMGroupAccessType.h"
#import "DBTEAMGroupMemberSelector.h"
#import "DBTEAMGroupMembersSetAccessTypeArg.h"
#import "DBTEAMGroupSelector.h"
#import "DBTEAMUserSelectorArg.h"

#pragma mark - API Object

@implementation DBTEAMGroupMembersSetAccessTypeArg

#pragma mark - Constructors

- (instancetype)initWithGroup:(DBTEAMGroupSelector *)group
                         user:(DBTEAMUserSelectorArg *)user
                   accessType:(DBTEAMGroupAccessType *)accessType
                returnMembers:(NSNumber *)returnMembers {

  self = [super initWithGroup:group user:user];
  if (self) {
    _accessType = accessType;
    _returnMembers = returnMembers ?: @YES;
  }
  return self;
}

- (instancetype)initWithGroup:(DBTEAMGroupSelector *)group
                         user:(DBTEAMUserSelectorArg *)user
                   accessType:(DBTEAMGroupAccessType *)accessType {
  return [self initWithGroup:group user:user accessType:accessType returnMembers:nil];
}

#pragma mark - Serialization methods

+ (NSDictionary *)serialize:(id)instance {
  return [DBTEAMGroupMembersSetAccessTypeArgSerializer serialize:instance];
}

+ (id)deserialize:(NSDictionary *)dict {
  return [DBTEAMGroupMembersSetAccessTypeArgSerializer deserialize:dict];
}

#pragma mark - Description method

- (NSString *)description {
  return [[DBTEAMGroupMembersSetAccessTypeArgSerializer serialize:self] description];
}

@end

#pragma mark - Serializer Object

@implementation DBTEAMGroupMembersSetAccessTypeArgSerializer

+ (NSDictionary *)serialize:(DBTEAMGroupMembersSetAccessTypeArg *)valueObj {
  NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

  jsonDict[@"group"] = [DBTEAMGroupSelectorSerializer serialize:valueObj.group];
  jsonDict[@"user"] = [DBTEAMUserSelectorArgSerializer serialize:valueObj.user];
  jsonDict[@"access_type"] = [DBTEAMGroupAccessTypeSerializer serialize:valueObj.accessType];
  jsonDict[@"return_members"] = valueObj.returnMembers;

  return jsonDict;
}

+ (DBTEAMGroupMembersSetAccessTypeArg *)deserialize:(NSDictionary *)valueDict {
  DBTEAMGroupSelector *group = [DBTEAMGroupSelectorSerializer deserialize:valueDict[@"group"]];
  DBTEAMUserSelectorArg *user = [DBTEAMUserSelectorArgSerializer deserialize:valueDict[@"user"]];
  DBTEAMGroupAccessType *accessType = [DBTEAMGroupAccessTypeSerializer deserialize:valueDict[@"access_type"]];
  NSNumber *returnMembers = valueDict[@"return_members"] ?: @YES;

  return [[DBTEAMGroupMembersSetAccessTypeArg alloc] initWithGroup:group
                                                              user:user
                                                        accessType:accessType
                                                     returnMembers:returnMembers];
}

@end
