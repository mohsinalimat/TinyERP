///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import "DBStoneSerializers.h"
#import "DBStoneValidators.h"
#import "DBTEAMAdminTier.h"
#import "DBTEAMMemberAddArg.h"

#pragma mark - API Object

@implementation DBTEAMMemberAddArg

#pragma mark - Constructors

- (instancetype)initWithMemberEmail:(NSString *)memberEmail
                    memberGivenName:(NSString *)memberGivenName
                      memberSurname:(NSString *)memberSurname
                   memberExternalId:(NSString *)memberExternalId
                   sendWelcomeEmail:(NSNumber *)sendWelcomeEmail
                               role:(DBTEAMAdminTier *)role {
  [DBStoneValidators stringValidator:nil maxLength:@(255)
                             pattern:@"^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*.[A-Za-z]{2,15}$"](memberEmail);
  [DBStoneValidators stringValidator:@(1) maxLength:@(100) pattern:@"[^/:?*<>\"|]*"](memberGivenName);
  [DBStoneValidators stringValidator:@(1) maxLength:@(100) pattern:@"[^/:?*<>\"|]*"](memberSurname);
  [DBStoneValidators
   nullableValidator:[DBStoneValidators stringValidator:nil maxLength:@(64) pattern:nil]](memberExternalId);

  self = [super init];
  if (self) {
    _memberEmail = memberEmail;
    _memberGivenName = memberGivenName;
    _memberSurname = memberSurname;
    _memberExternalId = memberExternalId;
    _sendWelcomeEmail = sendWelcomeEmail ?: @YES;
    _role = role ?: [[DBTEAMAdminTier alloc] initWithMemberOnly];
  }
  return self;
}

- (instancetype)initWithMemberEmail:(NSString *)memberEmail
                    memberGivenName:(NSString *)memberGivenName
                      memberSurname:(NSString *)memberSurname {
  return [self initWithMemberEmail:memberEmail
                   memberGivenName:memberGivenName
                     memberSurname:memberSurname
                  memberExternalId:nil
                  sendWelcomeEmail:nil
                              role:nil];
}

#pragma mark - Serialization methods

+ (NSDictionary *)serialize:(id)instance {
  return [DBTEAMMemberAddArgSerializer serialize:instance];
}

+ (id)deserialize:(NSDictionary *)dict {
  return [DBTEAMMemberAddArgSerializer deserialize:dict];
}

#pragma mark - Description method

- (NSString *)description {
  return [[DBTEAMMemberAddArgSerializer serialize:self] description];
}

@end

#pragma mark - Serializer Object

@implementation DBTEAMMemberAddArgSerializer

+ (NSDictionary *)serialize:(DBTEAMMemberAddArg *)valueObj {
  NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

  jsonDict[@"member_email"] = valueObj.memberEmail;
  jsonDict[@"member_given_name"] = valueObj.memberGivenName;
  jsonDict[@"member_surname"] = valueObj.memberSurname;
  if (valueObj.memberExternalId) {
    jsonDict[@"member_external_id"] = valueObj.memberExternalId;
  }
  jsonDict[@"send_welcome_email"] = valueObj.sendWelcomeEmail;
  jsonDict[@"role"] = [DBTEAMAdminTierSerializer serialize:valueObj.role];

  return jsonDict;
}

+ (DBTEAMMemberAddArg *)deserialize:(NSDictionary *)valueDict {
  NSString *memberEmail = valueDict[@"member_email"];
  NSString *memberGivenName = valueDict[@"member_given_name"];
  NSString *memberSurname = valueDict[@"member_surname"];
  NSString *memberExternalId = valueDict[@"member_external_id"] ?: nil;
  NSNumber *sendWelcomeEmail = valueDict[@"send_welcome_email"] ?: @YES;
  DBTEAMAdminTier *role = valueDict[@"role"] ? [DBTEAMAdminTierSerializer deserialize:valueDict[@"role"]]
                                             : [[DBTEAMAdminTier alloc] initWithMemberOnly];

  return [[DBTEAMMemberAddArg alloc] initWithMemberEmail:memberEmail
                                         memberGivenName:memberGivenName
                                           memberSurname:memberSurname
                                        memberExternalId:memberExternalId
                                        sendWelcomeEmail:sendWelcomeEmail
                                                    role:role];
}

@end
