///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import "DBFILESPropertyGroupUpdate.h"
#import "DBPROPERTIESPropertyField.h"
#import "DBStoneSerializers.h"
#import "DBStoneValidators.h"

#pragma mark - API Object

@implementation DBFILESPropertyGroupUpdate

#pragma mark - Constructors

- (instancetype)initWithTemplateId:(NSString *)templateId
                 addOrUpdateFields:(NSArray<DBPROPERTIESPropertyField *> *)addOrUpdateFields
                      removeFields:(NSArray<NSString *> *)removeFields {
  [DBStoneValidators stringValidator:@(1) maxLength:nil pattern:@"(/|ptid:).*"](templateId);
  [DBStoneValidators
   nullableValidator:[DBStoneValidators arrayValidator:nil maxItems:nil itemValidator:nil]](addOrUpdateFields);
  [DBStoneValidators
   nullableValidator:[DBStoneValidators arrayValidator:nil maxItems:nil itemValidator:nil]](removeFields);

  self = [super init];
  if (self) {
    _templateId = templateId;
    _addOrUpdateFields = addOrUpdateFields;
    _removeFields = removeFields;
  }
  return self;
}

- (instancetype)initWithTemplateId:(NSString *)templateId {
  return [self initWithTemplateId:templateId addOrUpdateFields:nil removeFields:nil];
}

#pragma mark - Serialization methods

+ (NSDictionary *)serialize:(id)instance {
  return [DBFILESPropertyGroupUpdateSerializer serialize:instance];
}

+ (id)deserialize:(NSDictionary *)dict {
  return [DBFILESPropertyGroupUpdateSerializer deserialize:dict];
}

#pragma mark - Description method

- (NSString *)description {
  return [[DBFILESPropertyGroupUpdateSerializer serialize:self] description];
}

@end

#pragma mark - Serializer Object

@implementation DBFILESPropertyGroupUpdateSerializer

+ (NSDictionary *)serialize:(DBFILESPropertyGroupUpdate *)valueObj {
  NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

  jsonDict[@"template_id"] = valueObj.templateId;
  if (valueObj.addOrUpdateFields) {
    jsonDict[@"add_or_update_fields"] =
        [DBArraySerializer serialize:valueObj.addOrUpdateFields
                           withBlock:^id(id elem) {
                             return [DBPROPERTIESPropertyFieldSerializer serialize:elem];
                           }];
  }
  if (valueObj.removeFields) {
    jsonDict[@"remove_fields"] = [DBArraySerializer serialize:valueObj.removeFields
                                                    withBlock:^id(id elem) {
                                                      return elem;
                                                    }];
  }

  return jsonDict;
}

+ (DBFILESPropertyGroupUpdate *)deserialize:(NSDictionary *)valueDict {
  NSString *templateId = valueDict[@"template_id"];
  NSArray<DBPROPERTIESPropertyField *> *addOrUpdateFields =
      valueDict[@"add_or_update_fields"]
          ? [DBArraySerializer deserialize:valueDict[@"add_or_update_fields"]
                                 withBlock:^id(id elem) {
                                   return [DBPROPERTIESPropertyFieldSerializer deserialize:elem];
                                 }]
          : nil;
  NSArray<NSString *> *removeFields = valueDict[@"remove_fields"]
                                          ? [DBArraySerializer deserialize:valueDict[@"remove_fields"]
                                                                 withBlock:^id(id elem) {
                                                                   return elem;
                                                                 }]
                                          : nil;

  return [[DBFILESPropertyGroupUpdate alloc] initWithTemplateId:templateId
                                              addOrUpdateFields:addOrUpdateFields
                                                   removeFields:removeFields];
}

@end
